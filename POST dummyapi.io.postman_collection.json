{
	"info": {
		"_postman_id": "a09a73ec-beff-4d5b-b30e-4d087db95162",
		"name": "POST dummyapi.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34170428"
	},
	"item": [
		{
			"name": "Get List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статус кода\r",
							"pm.test(\"Проверка статус кода=200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка текста ответа\r",
							"pm.test(\"Проверка текста ответа=OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"// Проверка времени ответа\r",
							"pm.test(\"Проверка времени ответа не более 1500мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.lessThan(1500);\r",
							"});\r",
							"\r",
							"// Переменная jsonData\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Проверка body id\r",
							"pm.test(\"Проверка body id\", function () {\r",
							"    pm.expect(jsonData.data[0].id).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Проверка body image\r",
							"pm.test(\"Body image\", function () {\r",
							"    pm.expect(jsonData.data[0].image).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Проверка body likes\r",
							"pm.test(\"Body likes\", function () {\r",
							"    pm.expect(jsonData.data[0].likes).to.be.a('number');\r",
							"});\r",
							"\r",
							"// Проверка body tags\r",
							"pm.test(\"body tags\", function () {\r",
							"    pm.expect(jsonData.data[0].tags).to.be.a('array');\r",
							"});\r",
							"\r",
							"// Проверка body text\r",
							"pm.test(\"Body text\", function () {\r",
							"    pm.expect(jsonData.data[0].text).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body publishDate\r",
							"pm.test(\"Body publishDate\", function () {\r",
							"    pm.expect(jsonData.data[0].publishDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body updatedDate\r",
							"pm.test(\"Body updatedDate\", function () {\r",
							"    pm.expect(jsonData.data[0].updatedDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body owner id\r",
							"pm.test(\"Body owner id\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.id).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body owner firstName\r",
							"pm.test(\"Body owner firstName\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.firstName).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body owner lastName\r",
							"pm.test(\"Проверка body owner lastName\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.lastName).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body 19\r",
							"pm.test(\"Проверка 19й записи в боди\", function () {\r",
							"    pm.expect(jsonData.data[19].id).to.be.an('String');\r",
							"});\r",
							"\r",
							"// Проверка body 20\r",
							"pm.test(\"Проверка отсутствия 20й записи в боди\", function () {\r",
							"    pm.expect(jsonData.data[20]).to.be.an('undefined');\r",
							"});\r",
							"\r",
							"// Проверка total string\r",
							"pm.test(\"total=number\", function () {\r",
							"    pm.expect(jsonData.total).to.be.a('number');\r",
							"});\r",
							"\r",
							"// Проверка page\r",
							"pm.test(\"page=0\", function () {\r",
							"    pm.expect(jsonData.page).to.eql(0);\r",
							"});\r",
							"\r",
							"// Проверка limit\r",
							"pm.test(\"limit=20\", function () {\r",
							"    pm.expect(jsonData.limit).to.eql(20);\r",
							"});\r",
							"\r",
							"// Проверка отсутствия link в Post Preview\r",
							"pm.test(\"Проверка отсутствия link в Post Preview\", function () {\r",
							"    pm.expect(jsonData.data[0].link).to.be.a('undefined');\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{version}}/post",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{version}}",
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статус кода\r",
							"pm.test(\"Проверка статус кода=200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка текста ответа\r",
							"pm.test(\"Проверка текста ответа=OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"// Проверка времени ответа\r",
							"pm.test(\"Проверка времени ответа не более 1500мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.lessThan(1500);\r",
							"});\r",
							"\r",
							"// Переменная jsonData\r",
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"postid\", jsonData.id);\r",
							"\r",
							"// Проверка боди строкой\r",
							"pm.test(\"Проверка боди строкой\", function () {\r",
							"    pm.expect(jsonData.id).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Проверка длинны id = 24 символа\r",
							"pm.test(\"Проверка длинны id = 24 символа\", function () {\r",
							"    pm.expect(jsonData.id.length).to.equal(24);\r",
							"});\r",
							"\r",
							"// Проверка точного id\r",
							"pm.test(\"Проверка точного id\", function () {\r",
							"    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"postid\"));\r",
							"});\r",
							"\r",
							"// Проверка image строкой\r",
							"pm.test(\"Проверка image строкой\", function () {\r",
							"    pm.expect(jsonData.image).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Проверка точной ссылки image \r",
							"pm.test(\"Проверка точной ссылки image\", function () {\r",
							"    pm.expect(jsonData.image).to.eql(\"https://randomuser.me/api/portraits/men/66.jpg\");\r",
							"});\r",
							"\r",
							"// Проверка likes числом\r",
							"pm.test(\"Проверка likes числом\", function () {\r",
							"    pm.expect(jsonData.likes).to.equal(0);\r",
							"});\r",
							"\r",
							"// Проверка link строкой\r",
							"pm.test(\"Проверка link строкой\", function () {\r",
							"    pm.expect(jsonData.link).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Проверка точной ссылки link\r",
							"pm.test(\"Проверка точной ссылки link\", function () {\r",
							"    pm.expect(jsonData.link).to.eql(\"https://randomuser.me/api/portraits/men/66.jpg\");\r",
							"});\r",
							"\r",
							"// Проверка tags массивом\r",
							"pm.test(\"Проверка tags массивом\", function () {\r",
							"    pm.expect(jsonData.tags).to.be.an('array');\r",
							"});\r",
							"\r",
							"// Проверка tags массивом со значеним 1\r",
							"pm.test(\"Проверка tags массивом со значеним 1\", function () {\r",
							"    pm.expect(jsonData.tags).to.include('1');\r",
							"});\r",
							"\r",
							"// Проверка text\r",
							"pm.test(\"Проверка text\", function () {\r",
							"    pm.expect(jsonData.text).to.equal(\"Символ\")\r",
							"});\r",
							"\r",
							"// Проверка publishDate строкой\r",
							"pm.test(\"Проверка publishDate строкой\", function () {\r",
							"    pm.expect(jsonData.publishDate).to.be.a('string')\r",
							"});\r",
							"\r",
							"// Проверка updatedDate строкой\r",
							"pm.test(\"Проверка updatedDate строкой\", function () {\r",
							"    pm.expect(jsonData.updatedDate).to.be.a('string')\r",
							"});\r",
							"\r",
							"// Проверка owner id строкой\r",
							"pm.test(\"Проверка owner id строкой\", function () {\r",
							"    pm.expect(jsonData.owner.id).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка длинны owner.id = 24 символа\r",
							"pm.test(\"Проверка длинны owner.id = 24 символа\", function () {\r",
							"    pm.expect(jsonData.owner.id.length).to.equal(24);\r",
							"});\r",
							"\r",
							"// Проверка owner firstName\r",
							"pm.test(\"Проверка owner firstName\", function () {\r",
							"    pm.expect(jsonData.owner.firstName).to.equal('Roman');\r",
							"});\r",
							"\r",
							"// Проверка owner lastName\r",
							"pm.test(\"Проверка owner lastName\", function () {\r",
							"    pm.expect(jsonData.owner.lastName).to.equal('family');\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"image\": \"https://randomuser.me/api/portraits/men/66.jpg\",\r\n    \"likes\": 0,\r\n    \"link\": \"https://randomuser.me/api/portraits/men/66.jpg\",\r\n    \"tags\": [1],\r\n    \"text\": \"Символ\",\r\n    \"publishDate\": \"2024-01-20T12:20:40.963Z\",\r\n    \"owner\": \"{{owner}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/{{version}}/post/create",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{version}}",
						"post",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List By User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статус кода\r",
							"pm.test(\"Проверка статус кода=200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка текста ответа\r",
							"pm.test(\"Проверка текста ответа=OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"// Проверка времени ответа\r",
							"pm.test(\"Проверка времени ответа не более 1500мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.lessThan(1500);\r",
							"});\r",
							"\r",
							"// Переменная jsonData\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Проверка body id\r",
							"pm.test(\"Проверка body id\", function () {\r",
							"    pm.expect(jsonData.data[0].id).to.eql(pm.collectionVariables.get(\"postid\"));\r",
							"});\r",
							"\r",
							"// Проверка body image\r",
							"pm.test(\"Body image\", function () {\r",
							"    pm.expect(jsonData.data[0].image).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Проверка точной ссылки image \r",
							"pm.test(\"Проверка точной ссылки image\", function () {\r",
							"    pm.expect(jsonData.data[0].image).to.eql(\"https://randomuser.me/api/portraits/men/66.jpg\");\r",
							"});\r",
							"\r",
							"// Проверка body likes\r",
							"pm.test(\"Body likes\", function () {\r",
							"    pm.expect(jsonData.data[0].likes).to.be.a('number');\r",
							"});\r",
							"\r",
							"// Проверка body tags\r",
							"pm.test(\"Body likes\", function () {\r",
							"    pm.expect(jsonData.data[0].tags).to.be.a('array');\r",
							"});\r",
							"\r",
							"// Проверка body text\r",
							"pm.test(\"Body text\", function () {\r",
							"    pm.expect(jsonData.data[0].text).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body publishDate\r",
							"pm.test(\"Body publishDate\", function () {\r",
							"    pm.expect(jsonData.data[0].publishDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body updatedDate\r",
							"pm.test(\"Body updatedDate\", function () {\r",
							"    pm.expect(jsonData.data[0].updatedDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body owner id\r",
							"pm.test(\"Body owner id\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.id).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body owner firstName\r",
							"pm.test(\"Body owner firstName\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.firstName).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body owner lastName\r",
							"pm.test(\"Проверка body owner lastName\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.lastName).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body 19\r",
							"pm.test(\"Проверка 19й записи в боди\", function () {\r",
							"    pm.expect(jsonData.data[19].id).to.be.an('String')\r",
							"});\r",
							"\r",
							"// Проверка body 20\r",
							"pm.test(\"Проверка отсутствия 20й записи в боди\", function () {\r",
							"    pm.expect(jsonData.data[20]).to.be.an('undefined');\r",
							"});\r",
							"\r",
							"// Проверка total string\r",
							"pm.test(\"total=number\", function () {\r",
							"    pm.expect(jsonData.total).to.be.a('number');\r",
							"});\r",
							"\r",
							"// Проверка page\r",
							"pm.test(\"page=0\", function () {\r",
							"    pm.expect(jsonData.page).to.eql(0);\r",
							"});\r",
							"\r",
							"// Проверка limit\r",
							"pm.test(\"limit=20\", function () {\r",
							"    pm.expect(jsonData.limit).to.eql(20);\r",
							"});\r",
							"\r",
							"// Проверка отсутствия link в Post Preview\r",
							"pm.test(\"Проверка отсутствия link в Post Preview\", function () {\r",
							"    pm.expect(jsonData.data[0].link).to.be.a('undefined');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{version}}/user/{{owner}}/post",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{version}}",
						"user",
						"{{owner}}",
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List By Tag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статус кода\r",
							"pm.test(\"Проверка статус кода=200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка текста ответа\r",
							"pm.test(\"Проверка текста ответа=OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"// Проверка времени ответа\r",
							"pm.test(\"Проверка времени ответа не более 1500мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.lessThan(1500);\r",
							"});\r",
							"\r",
							"// Переменная jsonData\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Проверка body id\r",
							"pm.test(\"Проверка body id=postid\", function () {\r",
							"    pm.expect(jsonData.data[0].id).to.eql(pm.collectionVariables.get(\"postid\"));\r",
							"});\r",
							"\r",
							"// Проверка body image\r",
							"pm.test(\"Body imag=string\", function () {\r",
							"    pm.expect(jsonData.data[0].image).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Проверка точной ссылки image \r",
							"pm.test(\"Проверка точной ссылки image\", function () {\r",
							"    pm.expect(jsonData.data[0].image).to.eql(\"https://randomuser.me/api/portraits/men/66.jpg\");\r",
							"});\r",
							"\r",
							"// Проверка body likes\r",
							"pm.test(\"Body likes=number\", function () {\r",
							"    pm.expect(jsonData.data[0].likes).to.be.a('number');\r",
							"});\r",
							"\r",
							"// Проверка body tags\r",
							"pm.test(\"Body likes=array\", function () {\r",
							"    pm.expect(jsonData.data[0].tags).to.be.a('array');\r",
							"});\r",
							"\r",
							"// Проверка body text\r",
							"pm.test(\"Body text=string\", function () {\r",
							"    pm.expect(jsonData.data[0].text).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body publishDate\r",
							"pm.test(\"Body publishDate=string\", function () {\r",
							"    pm.expect(jsonData.data[0].publishDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body updatedDate\r",
							"pm.test(\"Body updatedDate=string\", function () {\r",
							"    pm.expect(jsonData.data[0].updatedDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка body owner id\r",
							"pm.test(\"Body owner id=string\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.id).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка owner firstName\r",
							"pm.test(\"Проверка owner firstName\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.firstName).to.equal('Roman');\r",
							"});\r",
							"\r",
							"// Проверка owner lastName\r",
							"pm.test(\"Проверка owner lastName\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.lastName).to.equal('family');\r",
							"});\r",
							"\r",
							"// Проверка body 19\r",
							"pm.test(\"Проверка 19й записи в боди\", function () {\r",
							"    pm.expect(jsonData.data[19].id).to.be.an('String');\r",
							"});\r",
							"\r",
							"// Проверка body 20\r",
							"pm.test(\"Проверка отсутствия 20й записи в боди\", function () {\r",
							"    pm.expect(jsonData.data[20]).to.be.an('undefined');\r",
							"});\r",
							"\r",
							"// Проверка total string\r",
							"pm.test(\"total=number\", function () {\r",
							"    pm.expect(jsonData.total).to.be.a('number');\r",
							"});\r",
							"\r",
							"// Проверка page\r",
							"pm.test(\"page=0\", function () {\r",
							"    pm.expect(jsonData.page).to.eql(0);\r",
							"});\r",
							"\r",
							"// Проверка limit\r",
							"pm.test(\"limit=20\", function () {\r",
							"    pm.expect(jsonData.limit).to.eql(20);\r",
							"});\r",
							"\r",
							"// Проверка отсутствия link в Post Preview\r",
							"pm.test(\"Проверка отсутствия link в Post Preview\", function () {\r",
							"    pm.expect(jsonData.data[0].link).to.be.a('undefined');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{version}}/tag/1/post",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{version}}",
						"tag",
						"1",
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Post by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статус кода\r",
							"pm.test(\"Проверка статус кода=200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка текста ответа\r",
							"pm.test(\"Проверка текста ответа=OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"// Проверка времени ответа\r",
							"pm.test(\"Проверка времени ответа не более 1500мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.lessThan(1500);\r",
							"});\r",
							"\r",
							"// Переменная jsonData\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Проверка боди строкой\r",
							"pm.test(\"Проверка боди строкой\", function () {\r",
							"    pm.expect(jsonData.id).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Проверка длинны id = 24 символа\r",
							"pm.test(\"Проверка длинны id = 24 символа\", function () {\r",
							"    pm.expect(jsonData.id.length).to.equal(24);\r",
							"});\r",
							"\r",
							"// Проверка image строкой\r",
							"pm.test(\"Проверка image строкой\", function () {\r",
							"    pm.expect(jsonData.image).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Проверка точной ссылки image \r",
							"pm.test(\"Проверка точной ссылки image\", function () {\r",
							"    pm.expect(jsonData.image).to.eql(\"https://randomuser.me/api/portraits/men/66.jpg\");\r",
							"});\r",
							"\r",
							"// Проверка likes числом\r",
							"pm.test(\"Проверка likes числом\", function () {\r",
							"    pm.expect(jsonData.likes).to.equal(0);\r",
							"});\r",
							"\r",
							"// Проверка link строкой\r",
							"pm.test(\"Проверка link строкой\", function () {\r",
							"    pm.expect(jsonData.link).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Проверка точной ссылки link\r",
							"pm.test(\"Проверка точной ссылки link\", function () {\r",
							"    pm.expect(jsonData.link).to.eql(\"https://randomuser.me/api/portraits/men/66.jpg\");\r",
							"});\r",
							"\r",
							"// Проверка tags массивом\r",
							"pm.test(\"Проверка tags массивом\", function () {\r",
							"    pm.expect(jsonData.tags).to.be.an('array');\r",
							"});\r",
							"\r",
							"// Проверка tags массивом со значеним 1\r",
							"pm.test(\"Проверка tags массивом со значеним 1\", function () {\r",
							"    pm.expect(jsonData.tags).to.include('1');\r",
							"});\r",
							"\r",
							"// Проверка text\r",
							"pm.test(\"Проверка text\", function () {\r",
							"    pm.expect(jsonData.text).to.equal(\"Символ\")\r",
							"});\r",
							"\r",
							"// Проверка publishDate строкой\r",
							"pm.test(\"Проверка publishDate строкой\", function () {\r",
							"    pm.expect(jsonData.publishDate).to.be.a('string')\r",
							"});\r",
							"\r",
							"// Проверка updatedDate строкой\r",
							"pm.test(\"Проверка updatedDate строкой\", function () {\r",
							"    pm.expect(jsonData.updatedDate).to.be.a('string')\r",
							"});\r",
							"\r",
							"// Проверка owner id строкой\r",
							"pm.test(\"Проверка owner id строкой\", function () {\r",
							"    pm.expect(jsonData.owner.id).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка длинны owner.id = 24 символа\r",
							"pm.test(\"Проверка длинны owner.id = 24 символа\", function () {\r",
							"    pm.expect(jsonData.owner.id.length).to.equal(24);\r",
							"});\r",
							"\r",
							"// Проверка точного id\r",
							"pm.test(\"Проверка точного id\", function () {\r",
							"    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"postid\"));\r",
							"});\r",
							"\r",
							"// Проверка owner firstName\r",
							"pm.test(\"Проверка owner firstName\", function () {\r",
							"    pm.expect(jsonData.owner.firstName).to.equal('Roman');\r",
							"});\r",
							"\r",
							"// Проверка owner lastName\r",
							"pm.test(\"Проверка owner lastName\", function () {\r",
							"    pm.expect(jsonData.owner.lastName).to.equal('family');\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{version}}/post/{{postid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{version}}",
						"post",
						"{{postid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статус кода\r",
							"pm.test(\"Проверка статус кода=200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка текста ответа\r",
							"pm.test(\"Проверка текста ответа=OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"// Проверка времени ответа\r",
							"pm.test(\"Проверка времени ответа не более 1500мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.lessThan(1500);\r",
							"});\r",
							"\r",
							"// Переменная jsonData\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Проверка боди строкой\r",
							"pm.test(\"Проверка боди строкой\", function () {\r",
							"    pm.expect(jsonData.id).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Проверка длинны id = 24 символа\r",
							"pm.test(\"Проверка длинны id = 24 символа\", function () {\r",
							"    pm.expect(jsonData.id.length).to.equal(24);\r",
							"});\r",
							"\r",
							"// Проверка точного id\r",
							"pm.test(\"Проверка точного id\", function () {\r",
							"    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"postid\"));\r",
							"});\r",
							"\r",
							"// Проверка image строкой\r",
							"pm.test(\"Проверка image строкой\", function () {\r",
							"    pm.expect(jsonData.image).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Проверка likes числом\r",
							"pm.test(\"Проверка likes числом\", function () {\r",
							"    pm.expect(jsonData.likes).to.equal(1);\r",
							"});\r",
							"\r",
							"// Проверка link строкой\r",
							"pm.test(\"Проверка link строкой\", function () {\r",
							"    pm.expect(jsonData.link).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Проверка tags массивом\r",
							"pm.test(\"Проверка tags массивом\", function () {\r",
							"    pm.expect(jsonData.tags).to.be.an('array');\r",
							"});\r",
							"\r",
							"// Проверка tags массивом со значеним 1\r",
							"pm.test(\"Проверка tags массивом со значеним 1\", function () {\r",
							"    pm.expect(jsonData.tags).to.include('2');\r",
							"});\r",
							"\r",
							"// Проверка text\r",
							"pm.test(\"Проверка text\", function () {\r",
							"    pm.expect(jsonData.text).to.equal(\"Изменённый текст\")\r",
							"});\r",
							"\r",
							"// Проверка publishDate строкой\r",
							"pm.test(\"Проверка publishDate строкой\", function () {\r",
							"    pm.expect(jsonData.publishDate).to.be.a('string')\r",
							"});\r",
							"\r",
							"// Проверка updatedDate строкой\r",
							"pm.test(\"Проверка updatedDate строкой\", function () {\r",
							"    pm.expect(jsonData.updatedDate).to.be.a('string')\r",
							"});\r",
							"\r",
							"// Проверка owner id строкой\r",
							"pm.test(\"Проверка owner id строкой\", function () {\r",
							"    pm.expect(jsonData.owner.id).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Проверка длинны owner.id = 24 символа\r",
							"pm.test(\"Проверка длинны owner.id = 24 символа\", function () {\r",
							"    pm.expect(jsonData.owner.id.length).to.equal(24);\r",
							"});\r",
							"\r",
							"// Проверка owner firstName\r",
							"pm.test(\"Проверка owner firstName\", function () {\r",
							"    pm.expect(jsonData.owner.firstName).to.equal('Roman');\r",
							"});\r",
							"\r",
							"// Проверка owner lastName\r",
							"pm.test(\"Проверка owner lastName\", function () {\r",
							"    pm.expect(jsonData.owner.lastName).to.equal('family');\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"image\": \"123\",\r\n    \"likes\": 1,\r\n    \"link\": \"123\",\r\n    \"tags\": [2],\r\n    \"text\": \"Изменённый текст\",\r\n    \"publishDate\": \"2024-01-20T12:20:40.963Z\",\r\n    \"owner\": \"{{owner}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/{{version}}/post/{{postid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{version}}",
						"post",
						"{{postid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статус кода\r",
							"pm.test(\"Проверка статус кода=200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка текста ответа\r",
							"pm.test(\"Проверка текста ответа=OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"// Проверка времени ответа\r",
							"pm.test(\"Проверка времени ответа не более 1500мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.lessThan(1500);\r",
							"});\r",
							"// Переменная jsonData\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Проверка точного id\r",
							"pm.test(\"Проверка точного id\", function () {\r",
							"    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"postid\"));\r",
							"});\r",
							"\r",
							"// Проверка отсутствия text\r",
							"pm.test(\"Проверка отсутствия text\", function () {\r",
							"    pm.expect(jsonData.text).to.be.a('undefined');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/{{version}}/post/{{postid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{version}}",
						"post",
						"{{postid}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{app-id}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "app-id",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "postid",
			"value": ""
		}
	]
}